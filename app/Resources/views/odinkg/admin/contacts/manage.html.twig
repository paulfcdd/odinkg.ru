{% extends 'odinkg/admin/base.html.twig' %}

{% block top_block %}
    <h2>Контактная информация</h2>
    <small>Правка</small>
{% endblock %}

{% block content_block %}
    <div class="col-lg-12">
        <div class="ibox float-e-margins">
            <div class="ibox-title">
                <h5>Alpha project</h5>
            </div>
            <div class="ibox-content">
                <div class="row">
                    {{ form_start(form) }}
                    <div class="col-lg-6">
                        <div class="form-group">
                            <label class="control-label">{{ form_label(form.email) }}</label>
                            {{ form_widget(form.email, { 'attr' : {'class': 'form-control' }}) }}
                        </div>
                        <div class="hr-line-dashed"></div>
                        <div class="form-group">
                            <label class="control-label">{{ form_label(form.phone1) }}</label>
                            {{ form_widget(form.phone1, { 'attr' : {'class': 'form-control' }}) }}
                        </div>
                        <div class="hr-line-dashed"></div>
                        <div class="form-group">
                            <label class="control-label">{{ form_label(form.phone2) }}</label>
                            {{ form_widget(form.phone2, { 'attr' : {'class': 'form-control' }}) }}
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            <label class="control-label">{{ form_label(form.address) }}</label>
                            {{ form_widget(form.address, { 'attr' : {'class': 'form-control' }}) }}
                        </div>
                        <div class="hr-line-dashed"></div>
                        <div class="form-group">

                        </div>
                    </div>
                    <div class="col-lg-12">
                        {{ form_widget(form.save) }}
                    </div>
                    {{ form_end(form) }}
                </div>
            </div>
        </div>
    </div>
{% endblock %}
{% block custom_js %}
    <script>
        // This example displays an address form, using the autocomplete feature
        // of the Google Places API to help users fill in the information.

        var placeSearch, autocomplete;
        var componentForm = {
            contact_street_number: 'short_name',
            contact_route: 'long_name',
            contact_locality: 'long_name',
            contact_administrative_area_level_1: 'short_name',
            contact_country: 'long_name',
            contact_postal_code: 'short_name'
        };

        function initAutocomplete() {
            // Create the autocomplete object, restricting the search to geographical
            // location types.
            autocomplete = new google.maps.places.Autocomplete(
                /** @type {!HTMLInputElement} */(document.getElementById('contact_address')),
                {types: ['geocode']});

            // When the user selects an address from the dropdown, populate the address
            // fields in the form.
            autocomplete.addListener('place_changed', fillInAddress);
        }

        // [START region_fillform]
        function fillInAddress() {
            // Get the place details from the autocomplete object.
            var place = autocomplete.getPlace();

            for (var component in componentForm) {
                document.getElementById(component).value = '';
                document.getElementById(component).disabled = false;
            }

            // Get each component of the address from the place details
            // and fill the corresponding field on the form.
            for (var i = 0; i < place.address_components.length; i++) {
                var addressType = place.address_components[i].types[0];
                if (componentForm[addressType]) {
                    var val = place.address_components[i][componentForm[addressType]];
                    document.getElementById(addressType).value = val;
                }
            }
        }
        // [END region_fillform]

        // [START region_geolocation]
        // Bias the autocomplete object to the user's geographical location,
        // as supplied by the browser's 'navigator.geolocation' object.
//        function geolocate() {
//            if (navigator.geolocation) {
//                navigator.geolocation.getCurrentPosition(function (position) {
//                    var geolocation = {
//                        lat: position.coords.latitude,
//                        lng: position.coords.longitude
//                    };
//                    var circle = new google.maps.Circle({
//                        center: geolocation,
//                        radius: position.coords.accuracy
//                    });
//                    autocomplete.setBounds(circle.getBounds());
//                });
//            }
//        }
        // [END region_geolocation]

    </script>
{% endblock %}